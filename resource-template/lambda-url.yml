---
Resources:
  ApiDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: LambdaUrl
            DomainName:
              Fn::Select:
                [
                  2,
                  Fn::Split:
                    ['/', Fn::GetAtt: [IndexLambdaFunctionUrl, FunctionUrl]],
                ]
            CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginProtocolPolicy: https-only
              OriginSSLProtocols: ['TLSv1', 'TLSv1.1', 'TLSv1.2']
            OriginPath: ''
        Enabled: true
        HttpVersion: http2
        Comment: cdn for api gateway
        Aliases:
          - domain.tld
        PriceClass: PriceClass_All
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          CachedMethods:
            - HEAD
            - GET
          ForwardedValues:
            QueryString: true
            Headers: []
            Cookies:
              Forward: all
          MinTTL: '0'
          DefaultTTL: '0'
          TargetOriginId: LambdaUrl
          ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses: []
        ViewerCertificate:
          AcmCertificateArn: arn
          SslSupportMethod: sni-only
        Logging:
          IncludeCookies: 'false'
          Bucket: ''
          Prefix: ''
        WebACLId: waf-id
  DistributionDNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: hostedzone.tld
      RecordSets:
        - Name: domain.tld
          Type: A
          AliasTarget:
            DNSName:
              Fn::GetAtt: [ApiDistribution, DomainName]
            HostedZoneId: Z2FDTNDATAQYW2
            EvaluateTargetHealth: false
Outputs:
  ApiDistribution:
    Value:
      Fn::GetAtt: [ApiDistribution, DomainName]
